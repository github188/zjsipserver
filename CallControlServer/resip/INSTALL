Quick guide to building the libraries and tests:
------------------------------------------------

1) ./configure

Configure Options:
  --with-shared-libs              only build shared libraries
  --with-openssl                  include TLS support via OpenSSL
  --with-distcc                   use distributed compilation tool distcc

2) make

Notes: 
- all binaries and object files will be placed in a subdirectory of the directory containing the source files.  
- a symbolic link is made to any target executables in the directory where the main is
- If you configure --with-shared-libs, it will only build shared libraries so you will need to set LD_LIBRARY_PATH. (DYLD_LIBRARY_PATH under OS X)
e.g.  BASH example on linux with debug libraries
export LD_LIBRARY_PATH=$(RESIP_PATH)/lib.debug.Linux.i686 

e.g. tcsh example on linux with optimized libraries
setenv LD_LIBRARY_PATH $(RESIP_PATH)/lib.opt.Linux.i686 

e.g. BASH example on an Intel Macintosh running OS X
export DYLD_LIBRARY_PATH=$(RESIP_PATH)/obj.debug.Darwin.i386

To build with optimization level -O3: 
% make CODE_OPTIMIZE=3

To build with profiling (gprof) turned on: 
% make CODE_PROFILE=1

To build with distcc for distributed compilation (assume you have 4 hosts runing distccd)
See http://distcc.samba.org/
% ./configure --with-distcc
% make -j 8   


Supported Systems
-----------------

Supported Platforms: (to add new platform support see build/Makefile.osarch)
FreeBSD
Linux
QNX
SunOS  
Mac
cygwin

Supported toolchains: (to add new toolchain support see build/Makefile.tools)
gnu  (g++)
Intel (icc)
ARM cross-compiler (arm-linux-g++)
Sunpro (CC)

